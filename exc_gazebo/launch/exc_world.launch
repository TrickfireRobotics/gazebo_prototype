<launch>
  <rosparam file="$(find exc_control)/config/exc_control.yaml" command="load"/>

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find exc_gazebo)/worlds/exc.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find exc_description)/urdf/exc.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model excavator -param robot_description joint_state_controller"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/exc/joint_states" />
  </node>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/exc" args="joint_state_controller turntable_position_controller lower_arm_position_controller upper_arm_position_controller"/>

  <!-- Adds an extra transform for the end of the arm -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="upper_arm_end" args="0 0 0.9144 0 0 0 /arm_upper /arm_upper_end"/>
</launch>
